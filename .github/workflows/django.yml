name: Project CI

# triggers for the workflow
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# define jobs to be run in workflow
jobs:

  ### Build Backend ###
  build-backend:
    # specify the type of runner that the job will run on
    runs-on: ubuntu-latest

    # strategy for build job (parallel runs with different versions of python)
    strategy:
      max-parallel: 3 # max number of jobs that can run in parallel
      matrix:
        python-version: [3.11,3.12]

    # define service containers for the job
    services:
      postgres:
        image: postgres # docker image used for PostgreSQL service
        env:
          # env variables
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432 # map default PostgreSQL port inside container to runner host

    # backend-job steps
    steps:

    # check out the repository code
    - uses: actions/checkout@v3

    # set up Python environment using specified versions in the build matrix
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # install dependencies based on requirements.txt
    - name: Install Dependencies
      working-directory: ./backend # Note: specify working directory in backend each step
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Backend
      working-directory: ./backend
      # to be replaced with desired build command
      run: |
        python manage.py collectstatic --noinput

  ### Build Frontend ###
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # need Node.js to run react (npm run)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          
      # install frontend dependencies from package.json
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          npm install

      # build frontend
      - name: Build Frontend
        working-directory: ./frontend
        run: | 
          npm run build
    

        


        
